"use strict";(self.webpackChunkcompliance_docs=self.webpackChunkcompliance_docs||[]).push([[83],{3905:function(e,t,n){n.d(t,{Zo:function(){return u},kt:function(){return m}});var s=n(7294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(e);t&&(s=s.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,s)}return n}function r(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function a(e,t){if(null==e)return{};var n,s,o=function(e,t){if(null==e)return{};var n,s,o={},i=Object.keys(e);for(s=0;s<i.length;s++)n=i[s],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(s=0;s<i.length;s++)n=i[s],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var l=s.createContext({}),c=function(e){var t=s.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):r(r({},t),e)),n},u=function(e){var t=c(e.components);return s.createElement(l.Provider,{value:t},e.children)},p="mdxType",h={inlineCode:"code",wrapper:function(e){var t=e.children;return s.createElement(s.Fragment,{},t)}},f=s.forwardRef((function(e,t){var n=e.components,o=e.mdxType,i=e.originalType,l=e.parentName,u=a(e,["components","mdxType","originalType","parentName"]),p=c(n),f=o,m=p["".concat(l,".").concat(f)]||p[f]||h[f]||i;return n?s.createElement(m,r(r({ref:t},u),{},{components:n})):s.createElement(m,r({ref:t},u))}));function m(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var i=n.length,r=new Array(i);r[0]=f;var a={};for(var l in t)hasOwnProperty.call(t,l)&&(a[l]=t[l]);a.originalType=e,a[p]="string"==typeof e?e:o,r[1]=a;for(var c=2;c<i;c++)r[c]=n[c];return s.createElement.apply(null,r)}return s.createElement.apply(null,n)}f.displayName="MDXCreateElement"},9998:function(e,t,n){n.r(t),n.d(t,{assets:function(){return u},contentTitle:function(){return l},default:function(){return m},frontMatter:function(){return a},metadata:function(){return c},toc:function(){return p}});var s=n(7462),o=n(3366),i=(n(7294),n(3905)),r=["components"],a={title:"Test Sessions",sidebar_label:"Test Sessions"},l=void 0,c={unversionedId:"manual/session",id:"manual/session",title:"Test Sessions",description:"The execution of tests on the Mobile Money API Compliance Platform is performed",source:"@site/docs/manual/session.md",sourceDirName:"manual",slug:"/manual/session",permalink:"/manual/session",draft:!1,editUrl:"https://github.com/gsmainclusivetechlab/interop-docs/blob/develop/docs/manual/session.md",tags:[],version:"current",frontMatter:{title:"Test Sessions",sidebar_label:"Test Sessions"},sidebar:"someSidebar",previous:{title:"Quick Guide for Tests",permalink:"/manual/quickguide"},next:{title:"Test Results",permalink:"/manual/results"}},u={},p=[{value:"Creating a Test Session",id:"creating-a-test-session",level:2},{value:"Step 1: Session Setup",id:"step-1-session-setup",level:3},{value:"Step 2: SUT Selection",id:"step-2-sut-selection",level:3},{value:"Step 3: Configure components",id:"step-3-configure-components",level:3},{value:"Running Tests",id:"running-tests",level:2}],h={toc:p},f="wrapper";function m(e){var t=e.components,a=(0,o.Z)(e,r);return(0,i.kt)(f,(0,s.Z)({},h,a,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("p",null,'The execution of tests on the Mobile Money API Compliance Platform is performed\nthrough the creation of sessions. Sessions are defined by a selection of test\ncases. During the creation of a session, the user selects the test cases to be\nincluded, selects any SUTs and configures their address and encryption details.\nAfter creation, it is possible to run tests by clicking the "Run Test Case"\nbutton. The newly-created session is available on the home screen of the platform (as\nshown in the picture below), allowing the user to consult previously run tests,\ndelete and run new tests.'),(0,i.kt)("p",null,"Home screen with the user sessions: ",(0,i.kt)("img",{alt:"Comp Home",src:n(6981).Z,width:"1040",height:"896"})),(0,i.kt)("h2",{id:"creating-a-test-session"},"Creating a Test Session"),(0,i.kt)("p",null,"To create a session you must perform three main steps: Session Setup, SUT\nSelection and SUT Configuration."),(0,i.kt)("h3",{id:"step-1-session-setup"},"Step 1: Session Setup"),(0,i.kt)("p",null,"In this step, you can add information about the session you are creating:"),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"Name:")," Alias used to name the session. This name will be visible in the\ndashboard."),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"Description:")," Information about the session, to help explain the purpose of\nthe session."),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"Test Cases:")," All use case and test cases which are relevant for the\ncurrently-selected SUT type are displayed here. You can select any set of test\ncases to run during this session."),(0,i.kt)("p",null,"Step 1 - Session Setup form: ",(0,i.kt)("img",{alt:"Compliance Session Info",src:n(6705).Z,width:"1604",height:"1043"})),(0,i.kt)("h3",{id:"step-2-sut-selection"},"Step 2: SUT Selection"),(0,i.kt)("p",null,"In this step, you may select any number of SUTs to take part in the test. If you\nselect no components, the test will be fully simulated by the platform, and you\nwill be able to view an end-to-end execution of the test case without any\nexternal systems. On the other hand, if you select all components as SUTs, the\nplatform will simply act as a proxy layer between the components, with no\nbehaviour simulated at all."),(0,i.kt)("p",null,'For each SUT selected, you will need to enter a URL which the test platform will\nuse to send requests. If you wish to use an mTLS encrypted connection to your\nsystem, you should select "Use Encryption" and provide appropriate certificates.\nFor more details on the certificate upload process, please see Secure Connections.'),(0,i.kt)("p",null,"Step 2 - Selecting the system under test:\n",(0,i.kt)("img",{alt:"Compliance Session SUT Selection",src:n(9428).Z,width:"1642",height:"1135"})),(0,i.kt)("h3",{id:"step-3-configure-components"},"Step 3: Configure components"),(0,i.kt)("p",null,"During the execution of the tests, your SUT will need to communicate with other\ncomponents (such as the Service Provider simulator). In step 3 of the session creation wizard,\nyou will be presented with the URLs that your SUT should use for this\ncommunication. These URLs can also be retrieved after the session has been\ncreated from the session results page."),(0,i.kt)("p",null,"Step 3 - Component URLs:\n",(0,i.kt)("img",{alt:"Comp Session Configure Components",src:n(142).Z,width:"1072",height:"1362"})),(0,i.kt)("p",null,"In the screenshot above, Mobile Money API Provider is a SUT, and it should use the URL provided to\nsend any requests intended for the Service Provider."),(0,i.kt)("p",null,"As described in Connections, the URLs provided at\nthis stage are dynamic, and include the session UUID. If your user is a member\nof a group, you can select the session as the default session for your group\ninstead, which will provide a static group URL at this stage instead."),(0,i.kt)("p",null,"Finally, this page is also where environment variables are configured for the\nsession. These environment variables will affect the behaviour of the test\ncases, so it is important to match the variable names that are used in the test\ncase. The environment variable ",(0,i.kt)("em",{parentName:"p"},"names")," which are used in the selected test cases\nwill be set up automatically. These should be further documented in the test\ncase preconditions, and it is possible to adjust the session environment\nvariables at any time. If you are a member of a ",(0,i.kt)("a",{parentName:"p",href:"./groups"},"user group"),', you can\nalso "merge" the currently configured environment with a group environment which\nis preconfigured within your group.'),(0,i.kt)("p",null,"After the session has been created, you will be able to see the test cases\nselected during creation. From there, it is possible to select a specific test\ncase and proceed with the test execution."),(0,i.kt)("p",null,"Example of session main screen after its creation:\n",(0,i.kt)("img",{alt:"Session Screen",src:n(5242).Z,width:"1642",height:"879"})),(0,i.kt)("h2",{id:"running-tests"},"Running Tests"),(0,i.kt)("p",null,'Once your test session has been created, you can trigger the execution of a test\nby clicking the "Run Test Case" button. If the flow begins with a request from a\nsimulator, the first steps will automatically be executed. If the flow begins\nwith a request from a SUT, the platform will listen for the incoming request\nfrom the component.'),(0,i.kt)("p",null,'In the case that the flow begins with a SUT, it is also possible to trigger\nexecution of a test case implicitly by sending the first test request without\nfirst clicking on the "Run Test Case" button. If you do this, it is important to\nensure that all selected test cases in the session are unambiguous in terms of\npath and trigger, otherwise the request may be associated with a different test\ncase than the one you were expecting.'))}m.isMDXComponent=!0},6981:function(e,t,n){t.Z=n.p+"assets/images/comphome-ea2fd4f64ae81e16702092b766a70efa.png"},9428:function(e,t,n){t.Z=n.p+"assets/images/compselectsut-87ca032e2366621fce05ec734cf0ea2f.png"},142:function(e,t,n){t.Z=n.p+"assets/images/compsessionconfigure-f376b258afb9d5a1184c1a462d746c9f.png"},6705:function(e,t,n){t.Z=n.p+"assets/images/compsessioninfo-6ff7d348ee477181b5fff1c64d9cdf43.png"},5242:function(e,t,n){t.Z=n.p+"assets/images/compsessionscreen-3bc1c60f572ef7dbaaf00398888f7503.png"}}]);