"use strict";(self.webpackChunkcompliance_docs=self.webpackChunkcompliance_docs||[]).push([[345],{3905:function(e,t,n){n.d(t,{Zo:function(){return u},kt:function(){return f}});var s=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(e);t&&(s=s.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,s)}return n}function r(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,s,a=function(e,t){if(null==e)return{};var n,s,a={},o=Object.keys(e);for(s=0;s<o.length;s++)n=o[s],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(s=0;s<o.length;s++)n=o[s],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var l=s.createContext({}),c=function(e){var t=s.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):r(r({},t),e)),n},u=function(e){var t=c(e.components);return s.createElement(l.Provider,{value:t},e.children)},h="mdxType",p={inlineCode:"code",wrapper:function(e){var t=e.children;return s.createElement(s.Fragment,{},t)}},d=s.forwardRef((function(e,t){var n=e.components,a=e.mdxType,o=e.originalType,l=e.parentName,u=i(e,["components","mdxType","originalType","parentName"]),h=c(n),d=a,f=h["".concat(l,".").concat(d)]||h[d]||p[d]||o;return n?s.createElement(f,r(r({ref:t},u),{},{components:n})):s.createElement(f,r({ref:t},u))}));function f(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=n.length,r=new Array(o);r[0]=d;var i={};for(var l in t)hasOwnProperty.call(t,l)&&(i[l]=t[l]);i.originalType=e,i[h]="string"==typeof e?e:a,r[1]=i;for(var c=2;c<o;c++)r[c]=n[c];return s.createElement.apply(null,r)}return s.createElement.apply(null,n)}d.displayName="MDXCreateElement"},2602:function(e,t,n){n.r(t),n.d(t,{assets:function(){return u},contentTitle:function(){return l},default:function(){return f},frontMatter:function(){return i},metadata:function(){return c},toc:function(){return h}});var s=n(7462),a=n(3366),o=(n(7294),n(3905)),r=["components"],i={title:"Test Results",sidebar_label:"Test Results"},l=void 0,c={unversionedId:"manual/results",id:"manual/results",title:"Test Results",description:"After executing a test, all results are stored and available to the user in the",source:"@site/docs/manual/results.md",sourceDirName:"manual",slug:"/manual/results",permalink:"/manual/results",draft:!1,editUrl:"https://github.com/gsmainclusivetechlab/interop-docs/blob/develop/docs/manual/results.md",tags:[],version:"current",frontMatter:{title:"Test Results",sidebar_label:"Test Results"},sidebar:"someSidebar",previous:{title:"Test Sessions",permalink:"/manual/session"},next:{title:"User Groups",permalink:"/manual/groups"}},u={},h=[{value:"Session Results",id:"session-results",level:2},{value:"Accessing Test Case Results",id:"accessing-test-case-results",level:2},{value:"Test Information",id:"test-information",level:2},{value:"Test Runs",id:"test-runs",level:3},{value:"Test Steps",id:"test-steps",level:3},{value:"Test Flow",id:"test-flow",level:3},{value:"Message Log",id:"message-log",level:3},{value:"Footnotes",id:"footnotes",level:5}],p={toc:h},d="wrapper";function f(e){var t=e.components,i=(0,a.Z)(e,r);return(0,o.kt)(d,(0,s.Z)({},p,i,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("p",null,"After executing a test, all results are stored and available to the user in the\ntest session on the Mobile Money API Compliance Platform."),(0,o.kt)("h2",{id:"session-results"},"Session Results"),(0,o.kt)("p",null,"As the tests are carried out, the platform stores the information for each\nexecution in the session history. Thus, the user can access and analyse all the\ntests run for each test case. In the figure below it is possible to see the main\nelements present in the session screen when several tests are performed and\nthen, a brief description of these elements is shown."),(0,o.kt)("p",null,"Session screen elements: ",(0,o.kt)("img",{alt:"ITP Session Info",src:n(1411).Z,width:"1768",height:"1192"})),(0,o.kt)("ol",null,(0,o.kt)("li",{parentName:"ol"},"Summary of the number of passed test cases. Failed tests are shown in red,\npassed tests in green, and non-executed tests, in grey."),(0,o.kt)("li",{parentName:"ol"},"Information about the recent execution of test cases. The information is\ngrouped by date."),(0,o.kt)("li",{parentName:"ol"},"Link to the session Message Log, where ",(0,o.kt)("em",{parentName:"li"},"all")," requests to the platform are\nrecorded. This is often useful in debugging, when a request is not matched\nwith a test case."),(0,o.kt)("li",{parentName:"ol"},"An overview of test cases selected for this session, organized by use case\nand by happy / unhappy flow."),(0,o.kt)("li",{parentName:"ol"},"In this area, you can view the latest tests run and its information such as:",(0,o.kt)("ul",{parentName:"li"},(0,o.kt)("li",{parentName:"ul"},"Execution ID: Identifier created by the platform to differentiate this\nexecution from the others. For the same test case executed more than once,\nthe platform will assign different Run ID for each execution."),(0,o.kt)("li",{parentName:"ul"},"Test Case Name"),(0,o.kt)("li",{parentName:"ul"},"Status: Indicates the state of the test case execution (pass, fail or\nincomplete)"),(0,o.kt)("li",{parentName:"ul"},"Duration: Time in milliseconds that the execution of this test consumed",(0,o.kt)("sup",null,"[1](#testduration)"),"."),(0,o.kt)("li",{parentName:"ul"},"Date: Describes when the test was performed.")))),(0,o.kt)("h2",{id:"accessing-test-case-results"},"Accessing Test Case Results"),(0,o.kt)("p",null,"When clicking on a test case, the user will have access to its information and\nthe results of all executions carried out for this particular test. The data\nthat can be seen are principally: configuration, description, preconditions,\ntest runs, test steps and test flow. This information will be further detailed\nbelow."),(0,o.kt)("p",null,"Executions for a test case: ",(0,o.kt)("img",{alt:"List of Executed Tests",src:n(6504).Z,width:"1014",height:"557"})),(0,o.kt)("h2",{id:"test-information"},"Test Information"),(0,o.kt)("p",null,'Each test case displays its basic information on the left of the screen. Under\n"configuration," the base URLs are listed for each component addressed by the\nchosen SUTs. In the figure above, we see the URL that the component called\n"Client" (which is a SUT in this test session) should use to reach the component\ncalled "Server". Underneath, the ',(0,o.kt)("strong",{parentName:"p"},"description")," contains a general purpose of\nthe test, describing the scenario under simulation. Finally, some test cases\ndescribe test ",(0,o.kt)("strong",{parentName:"p"},"preconditions"),' which help in understanding how the tests should\nbe performed. For example, a test case may require a particular "amount" to be\nset in order to trigger certain behaviour within the simulators.'),(0,o.kt)("h3",{id:"test-runs"},"Test Runs"),(0,o.kt)("p",null,"In the ",(0,o.kt)("strong",{parentName:"p"},"Test Runs")," tab are all the historic executions of the test case. Each\nrun contains information such as the test run ID, the status, the duration and\nhow long ago the run was performed."),(0,o.kt)("p",null,'After clicking on a test run ID, the user can navigate through the steps\ninvolved in the test case. For each step it is possible to see the overall\nstatus, every assertion performed for the test step, and a log of the request\nand response messages. By clicking on a test assertion, you can see both the\ndetails of the request or response as well as the "expected" state when this is\ndifferent. This information is very useful to understand how the step works and\nthe test case as a whole, especially in the case of unexplained failure in one\nof the steps.'),(0,o.kt)("p",null,"Information of Test Runs tab: ",(0,o.kt)("img",{alt:"Example of Test Runs",src:n(6334).Z,width:"844",height:"905"})),(0,o.kt)("h3",{id:"test-steps"},"Test Steps"),(0,o.kt)("p",null,"Under the ",(0,o.kt)("strong",{parentName:"p"},"Test Steps")," tab, it is possible to see a more detailed view of each\nof the scripted steps in the test case. In each row of the table you can see the\nmethod used, the endpoint, and the source and destination components for the\nrequest. Clicking on the Request or Response buttons will show an example\nrequest or response, which can be useful in designing your implementation. A\nbutton to copy the request in ",(0,o.kt)("inlineCode",{parentName:"p"},"cURL")," format is also available, which can be a\nconvenient way to execute or debug a test case."),(0,o.kt)("p",null,"Information of Test Steps tab: ",(0,o.kt)("img",{alt:"Example of Test Steps",src:n(5171).Z,width:"658",height:"336"})),(0,o.kt)("h3",{id:"test-flow"},"Test Flow"),(0,o.kt)("p",null,"The ",(0,o.kt)("strong",{parentName:"p"},"test flow")," consists of a sequence diagram showing the messages exchanged\nbetween the components involved in the test. Through the flow diagram it is\npossible to understand how the different components interact over time. This\ninformation can also be found in the test steps tab, however the diagram\nprovides a simpler and more directed view of the steps performed, while the\nsteps view provides more detailed information, such as data contained in the\nheader and in the body of the requests."),(0,o.kt)("p",null,"If the user wishes, the test flow can be exported or edited. By clicking on the\nDiagram Editor option, the code generated for the test flow is opened on the\nMermaid platform. Through Mermaid the user can change the flows, export\ndifferent types of images and generate the diagram markdown file. This\npossibility can be a useful tool for creating and viewing new test cases before\nproposing them to the Mobile Money API Compliance Platform."),(0,o.kt)("p",null,"Information of Test Flow tab: ",(0,o.kt)("img",{alt:"Example of Test Flow",src:n(1760).Z,width:"657",height:"461"})),(0,o.kt)("hr",null),(0,o.kt)("h3",{id:"message-log"},"Message Log"),(0,o.kt)("p",null,"The ",(0,o.kt)("strong",{parentName:"p"},"Test Results")," tab described above lists the execution of every ",(0,o.kt)("em",{parentName:"p"},"expected"),"\nrequest and response to reach the platform. However it can be the case that\nmessages do not arrive at the platform in quite the way expected. For example, a\nhappy test case may expect a message to be sent to the ",(0,o.kt)("inlineCode",{parentName:"p"},"/callback")," endpoint, but\nin reality the SUT sends a message to the ",(0,o.kt)("inlineCode",{parentName:"p"},"/error")," callback. The same problem\nmay happen in reverse for an unhappy test case, where an ",(0,o.kt)("inlineCode",{parentName:"p"},"/error")," request is\nexpected but a ",(0,o.kt)("inlineCode",{parentName:"p"},"/callback")," request is sent instead."),(0,o.kt)("p",null,"These messages will not be displayed in the ",(0,o.kt)("strong",{parentName:"p"},"Test Results"),' tab, because they\nare not recognised as part of the test case. Instead, they will be displayed in\nthe Message Log view, which is accessible by clicking on the "Log" button in the\ntop right.'),(0,o.kt)("p",null,"On this page, every request which reached the platform is displayed. Where a\ntest case is identified for the request, the matching test step is included.\nWhere a test case is not identified, the request details are nonetheless\ndisplayed for debugging purposes, along with any error messages that were\ngenerated by the platform on receipt."),(0,o.kt)("p",null,"Message log: ",(0,o.kt)("img",{alt:"Message Log",src:n(9713).Z,width:"756",height:"881"})),(0,o.kt)("h5",{id:"footnotes"},"Footnotes"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{name:"testduration"},"1"),": This duration is directly related to the GSMA Mobile Money API Compliance Platform. The performance of the system under test is not evaluated here, since part of the test execution comes from simulated components, which may involve artificial simulated delays.")))}f.isMDXComponent=!0},6504:function(e,t,n){t.Z=n.p+"assets/images/runlist-4abe5fa34f2882c8478b7269f256f634.png"},1760:function(e,t,n){t.Z=n.p+"assets/images/testflow-06a284bcb327e186f2bdf79c7365f18c.png"},9713:function(e,t,n){t.Z=n.p+"assets/images/testmessagelog-7a330577f113c97f7a545ca3c69139ea.png"},6334:function(e,t,n){t.Z=n.p+"assets/images/testruns-8b5288ee30a2682e5b4df880db16f1ca.png"},1411:function(e,t,n){t.Z=n.p+"assets/images/testsmainscreen-2a7727361cb6478af7e1270e5dc5dfa1.png"},5171:function(e,t,n){t.Z=n.p+"assets/images/teststeps-208e4920b387b0dffc7c9679aa649c99.png"}}]);